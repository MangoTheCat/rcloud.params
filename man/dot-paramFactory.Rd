% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/params.api.R
\name{.paramFactory}
\alias{.paramFactory}
\title{Factory creating rcloud.params controls}
\usage{
.paramFactory(var, label, r.class, query = var,
  tag.factory = function(...) {     do.call("tag", ...) },
  tag.value.extractor = .getValueFromTagAttribute,
  qs.value.extractor = .getSingleValueFromQueryParameter,
  empty.value.handler = .emptyStringEmptyValueHandler,
  r.to.tag.value.mapper = .rToUIControlDefaultValueMapper(.rToUIValueMapper(r.class)),
  ui.to.r.value.mapper = .uiToRValueMapper(r.class), ...)
}
\arguments{
\item{var}{the variable name}

\item{label}{the label for the control}

\item{r.class}{type of the variable}

\item{query}{variable parameter name}

\item{tag.factory}{the function returning form input shiny.tags}

\item{tag.value.extractor}{a function that extracts value specified via shiny.tag attributes}

\item{qs.value.extractor}{a function that extracts value from a query string}

\item{empty.value.handler}{a function that handles case when the value is empty (if default, query string nor shiny.tag specify a value), 
it allows for mapping an empty value to control value (e.g. NULL to empty selection in case of select input)}

\item{r.to.tag.value.mapper}{a mapper that converts R value to a value accepted by shiny.tag}

\item{ui.to.r.value.mapper}{a mapper that converts UI value to an R value}

\item{...}{parameters passed to shiny.tag, if 'callbacks' list is among them, it is removed before it is passed to tag.factory}
}
\value{
shiny.tag representing the produced parameter control
}
\description{
The factory is configurable via a number of strategies that address variability in the process of creating shiny.tags representing rcloud.params controls.
}
\details{
The returned value is a shiny.tag structure, the associated rcloud.params.control is persisted in the packages environment and is used to invoke control-specific callback functions.
}
